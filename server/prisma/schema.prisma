// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  BEACHFRONT
  LUXE
  CABINS
  CASTLES
  BEACH_HOUSES
  CHALETS
  TINY_HOMES
  RIVERSIDE_CABINS
  LUXURY_VILLAS
  AMAZING_POOLS
  CAMPING
  ARCTIC
  CARAVANS
  TREE_HOUSES
  FISHING_BOATS
  SAILBOATS
}


model User {
  id       Int @id @default(autoincrement())
  name     String
  email    String
  password String
}

model Product {
  product_id           Int        @id @default(autoincrement())
  title                String     @db.VarChar(150)
  host                 String     @db.VarChar(150)
  star_grade           Float
  price                Float
  accommodation        String     @db.VarChar(150)
  address              String     @db.VarChar(150)
  category              Category[]
  guests               Int
  bedrooms             Int
  beds                 Int
  baths                Int
  host_name            String     @db.VarChar(64)
  hosting_duration     String     @db.VarChar(64)
  role                 String     @db.VarChar(64)
  profile_pic_Url      String     @db.VarChar(150)
  description_space    String     @db.Text
  description_place    String     @db.Text
  guest_access         String     @db.Text
  other_things         String     @db.VarChar(150)
  lon                  Decimal    @db.Decimal(12, 8)
  lat                  Decimal    @db.Decimal(12, 8)
  address_description  String     @db.Text
  total_avg_rating     Float
  total_reviews_count  Int
  cleanliness_avg_rating Float
  accuracy_avg_rating    Float
  checkin_avg_rating     Float
  communication_avg_rating Float
  location_avg_rating     Float
  value_avg_rating        Float

  highlights           Highlight[]
  amenities            Amenitie[]
  images               Image[]
  reviews              Review[]
  booking              Booking[]
}

model Highlight {
  highlight_id Int      @id @default(autoincrement())
  product_id   Int
  type         String   @db.VarChar(64)
  text         String   @db.VarChar(64)
  sub_text     String   @db.VarChar(150)

  Product      Product  @relation(fields: [product_id], references: [product_id])

  @@index([product_id])
}

model Amenitie {
  amenitie_id  Int      @id @default(autoincrement())
  product_id   Int
  type         String   @db.VarChar(64)
  text         String   @db.VarChar(64)

  Product      Product  @relation(fields: [product_id], references: [product_id])

  @@index([product_id])
}

model Image {
  image_id        Int      @id @default(autoincrement())
  product_id      Int
  image_url       String   @db.VarChar(250)
  product_section String   @db.VarChar(150)

  Product         Product  @relation(fields: [product_id], references: [product_id])

  @@index([product_id])
}

model Review {
  review_id            Int      @id @default(autoincrement())
  product_id           Int
  name                 String   @db.VarChar(64)
  review_text          String   @db.VarChar(250)
  rating               Int
  reviewer_image       String   @db.VarChar(250)
  date_image           DateTime
  accuracy_rating      Float
  checkin_rating       Float
  cleanliness_rating   Float
  communication_rating Float

  Product              Product  @relation(fields: [product_id], references: [product_id])

  @@index([product_id])
}

model Booking {
  booking_id                  Int      @id @default(autoincrement())
  product_id                  Int
  checkInDate                 DateTime
  checkOutDate                DateTime
  totalPrice                  Float
  pricePerNight               Float
  cleaningFee                 Float
  airbnbServiceFee            Float
  longStayDiscount            Float
  nightsCountForLongStayDiscount Int
  minStayNights               Int
  isBookingOpen               Boolean
  adults                      Int
  children                    Int
  infants                     Int
  pets                        Int

  Product                     Product  @relation(fields: [product_id], references: [product_id])

  @@index([product_id])
}

model Place {
  id       Int @id @default(autoincrement())
  title               String
  host                String
  price               String
  accommodation       String
  address             String
  guests              Int
  bedrooms            Int
  beds                Int
  baths               Int
  starGrade           Float
  reviewsCount        Int
  highlightCheckIn    String?
  highlightAward      String?
  highlightWifi       String?
  highlightCancellation String?
  amenitiesKitchen    Boolean?
  amenitiesWorkspace  Boolean?
  amenitiesSauna      Boolean?
  amenitiesBalcony    Boolean?
  amenitiesFireplace  Boolean?
  amenitiesWifi       Boolean?
  amenitiesParking    Boolean?
  amenitiesPets       Boolean?
  amenitiesBackyard   Boolean?
  amenitiesFirepit    Boolean?
  reviewSummaryTotalAvgRating Float
  reviewSummaryTotalReviewsCount Int
  cleanlinessAvgRating Float
  accuracyAvgRating    Float
  checkInAvgRating     Float
  communicationAvgRating Float
  locationAvgRating    Float
  valueAvgRating       Float
  starTotalFiveStar    Int
  starTotalFourStar    Int
  starTotalThreeStar   Int
  starTotalTwoStar     Int
  starTotalOneStar     Int
  lon                  Float
  lat                  Float
  mapAddress           String
  mapAddressDescription String
  hostName             String
  hostingDuration      Int
  role                 String
  hostProfilePicUrl    String
  descriptionPlace     String
  descriptionSpace     String
  guestAccess          String
  otherThings          String
}